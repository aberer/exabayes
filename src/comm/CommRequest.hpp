#ifndef _COMM_REQUEST_HPP
#define _COMM_REQUEST_HPP

#include "common.h"

#include <vector>
#include <memory>

#include <cassert>

class RemoteComm;

///////////////////////////////////////////////////////////////////////////////
//                                COMM REQUEST                               //
///////////////////////////////////////////////////////////////////////////////
class CommRequest
{
    ///////////////////////////////////////////////////////////////////////////
    //                            PUBLIC INTERFACE                           //
    ///////////////////////////////////////////////////////////////////////////
public:
    class Impl;
    friend class RemoteComm;
    // ________________________________________________________________________
    CommRequest(
        std::vector<char>array = std::vector<char>{});
    // ________________________________________________________________________
    CommRequest(
        CommRequest&&rhs);
    // ________________________________________________________________________
    CommRequest(
        const CommRequest& rhs) = delete;
    // ________________________________________________________________________
    CommRequest&                         operator=(
        CommRequest rhs);
    // ________________________________________________________________________
    ~CommRequest();
    // ________________________________________________________________________
    friend void                          swap(
        CommRequest& lhs,
        CommRequest& rhs);
    // ________________________________________________________________________
    std::vector<char>                    getArray() const;
    // ________________________________________________________________________
    bool                                 isServed() const;

    ///////////////////////////////////////////////////////////////////////////
    //                           PRIVATE INTERFACE                           //
    ///////////////////////////////////////////////////////////////////////////
private:
    std::unique_ptr<CommRequest::Impl> _impl;
};


#endif
