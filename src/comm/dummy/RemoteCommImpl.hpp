#ifndef _REMOTE_COMM_IMPL_SEQ_HPP
#define _REMOTE_COMM_IMPL_SEQ_HPP

#include <vector>

#include "common.h"

class CommRequest;

#include "RemoteComm.hpp"
#include "CommCoreNew.hpp"

///////////////////////////////////////////////////////////////////////////////
//                              REMOTE COMM IMPL                             //
///////////////////////////////////////////////////////////////////////////////
class RemoteComm::Impl
{
    ///////////////////////////////////////////////////////////////////////////
    //                              PUBLIC TYPES                             //
    ///////////////////////////////////////////////////////////////////////////
public:
    using SELF = Impl;

    ///////////////////////////////////////////////////////////////////////////
    //                              PUBLIC DATA                              //
    ///////////////////////////////////////////////////////////////////////////
    // TODO: omg
public:
    static uint64_t _maxTagValue;

    ///////////////////////////////////////////////////////////////////////////
    //                            PUBLIC INTERFACE                           //
    ///////////////////////////////////////////////////////////////////////////
public:
    // ________________________________________________________________________
    Impl()
        : dummy{0}
    {}
    // ________________________________________________________________________
    Impl(
        const Impl& rhs)
        : dummy{rhs.dummy}
    {}
    // ________________________________________________________________________
    Impl&                          operator=(
        Impl rhs);
    // ________________________________________________________________________
    friend void                    swap(
        Impl& lhs,
        Impl& rhs)
    {std::swap(lhs.dummy, rhs.dummy); };
    // ________________________________________________________________________
    ~Impl()
    {};
    // ________________________________________________________________________
    void                           createSendRequest(
        std::vector<char>array,
        int              dest,
        int              tag,
        CommRequest&     req);
    // ________________________________________________________________________
    void                           createRecvRequest(
        int          src,
        int          tag,
        nat          length,
        CommRequest& req);
    // ________________________________________________________________________
    void                           waitAtBarrier() const
    {}

#include "CommCore.hpp"
    // ________________________________________________________________________
    nat                            getNumberOfPhysicalNodes();

    ///////////////////////////////////////////////////////////////////////////
    //                             PRIVATE DATA                              //
    ///////////////////////////////////////////////////////////////////////////
private:
    nat dummy;
};


#include "comm/dummy/RemoteCommImpl.tpp"


#endif
