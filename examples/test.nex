 #NEXUS
begin EXABAYES; 
   [ NOTICE: please do not use scientific notation for numbers (e.g., 1e-6). Right now, we cannot parse this ] 

      [ RUN PARAMETERS ]
      diagFreq 1000		[ check for convergence of multiple independent runs after this many generations ]
      samplingFrequency 50 	[ take a sample every n generations ]
      numIndiChains  1 		[ number of independant chains/runs ]
      numGen 10000             [ if numIndiChains = 1, stop simulation after that many generations ] 
      tuneFreq 100 		[ tune move parameters every n generations, set to 0, if you want to disable parameter tuning ] 
      printFreq 500		[ print a sample to the screen every n generations, set to 0 if you want to disable output info about the state of the chains  ]

      [ CONVERGENCE ]
      asdsfIgnoreFreq  0.1	[ ignore clades for which the relative  frequency in no chain exceeds this value ]
      asdsfConvergence  0.005    [ indicate convergence, as soon as the asdsf is below this value: 1-5% is considered good, 0.005 can be considered very good convergence ] 


      [ MCMCMC ]
      numCoupledChains 1   [ number of chains per independent run (only one is cold)  => must be > 0] 
      heatFactor 0.1   	   [ the heat increment added to each hotter chain (this is not the inverse heat)   ]
      swapInterval 1 	   [ attempt a swap between chains every n generations ]
      tuneHeat false        [ if true, the heat increment will be tuned, s.t. the cold chain swaps with the coldest hot chain in 23.45% of all cases   ] 

      [ BURNIN ] 
      [ comment out one of the two options ]      
      [ burninGen 2000    [ exact number of generations that are discarded for diagnostics ] ] 
      burninProportion 0.25 [ discard this proportion of all initial samples as burnin  ]


      [================================================================]
      [ PRIOR configuration ]
      [================================================================]

      [ topology: constraints not enabled currently  ]
        [ topoPr fixed()  ] 
      [ topoPr uniform() ] 

      [ branch lengths: TODO per-partition,clock ]
        [ brlenpr uniform(0.0000001,4)  ] 
        [ brlenpr fixed()  ]      [ you should have provided a user tree with branch lengths ]  
      [  brlenpr exponential(10.0) ] 

      [ substitution matrix ]
       [ revMatPr dirichlet(1,2,3,4,5,6)   ] 
      [ revMatPr fixed(1,2,3,4,5,6) ] 

      [ state frequencies ] 
      [ stateFreqPr  dirichlet(1.0,1.0,1.0,1.0)  ] 
      [ stateFreqPr fixed(empirical) ] [ NOT implemented yet ] 
       [ stateFreqPr fixed(1,2,3,4)   ] 

      [ rate heterogeneity: alpha parameter ]
      [ shapePr exponential(1) ]
      [ shapePr uniform(0.0000001,200) ] 
       [ shapePr fixed(1)   ] 

      [================================================================]
      [ PROPOSAL configuration ]
      [================================================================]

      [ TOPOLOGY ]
      eSPR 10  [ ok, 10% in mb  ]
      stNNI 10  [ ok, 10% in mb]	
      eTBR  10 [ ok, 10% in mb ] 
      parsimonySPR 10 [ ok, 10% in mb ]
      guidedSPR 0   [ broken ] 

      [ BRANCH LENGTHS ] 
      branchSlider 0 [ ok ] 
      branchMulti 40 [ ok, 40% in mrb ]
      treeLengthMult 4 [ ok, 4 % in mrb ]
      nodeSlider  10 [ ok, 10% in mrb ]
      GuidedBL 0 []
      branchCollapser 0    [ ok ]

      [ RATE HETEROGENEITY ]
      rateHetSlider 0 [ broken, 1 in mrb ]		
      rateHetMulti 2   [ ok, 1 in mrb  ]

      [ REVMAT ] 
      revMatSlider 1 [  ok, 1 in mrb ]		
      revMatDirichlet 1  [ ok, 1 in mrb ]

      [ FREQUENIES ]
      FrequencySlider 1  [ ok, 1 in mrb  ] 
      FrequencyDirichlet 1  [ ok, 1 in mrb ]

      [ PARAMETERS for various moves ]
      guidedSPRRadius 10  [ maximum radius that is searched by the guided spr move ] 
      eSprStopProb 0.5 [ stopping probability for eSPR moves, 0.5 in mb! ] 
      parsimonyWarp 0.10 [ warp factor for parsimony based moves => if we set that to 10, it is a reference to the star trek voyager episode "threshold" ]  


      [================================================================]

end;
